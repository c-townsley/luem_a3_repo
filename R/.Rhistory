c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
labels=as.character(quantile(calg_pred$allPredictions),
labels=as.character(quantile(calg_pred$allPredictions,
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
ggplot() +
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues) +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(1,2,4,6,8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
0.
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(allPredictions)),
colour=NA) +
scale_fill_manual(values = blues,
name="Predicted\nProbabilities(%)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(allPredictions)),
colour=NA) +
scale_fill_manual(values = blues,
name="Predicted\nProbabilities(%)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
glimpse(blues)
,4)
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(allPredictions,4))),
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
denver_dat_log <- denver_dat %>%
dplyr::select(uniqueID, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry)
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")[,2]
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 10000000))
denver_dat_log <- denver_dat %>%
dplyr::select(uniqueID, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry)
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")[,2]
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 10000000))
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(allPredictions,5))),
r(ntile
ggplot() +
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
denver_pred %>%
mutate(confResult=case_when(allPredictions < 50 & inund_sum==0 ~ "True Negative",
allPredictions >= 50 & inund_sum==1 ~ "True Positive",
allPredictions < 50 & inund_sum==1 ~ "False Negative",
allPredictions >= 50 & inund_sum==0 ~ "False Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
scale_fill_manual(values = c("#B0B0B3","#A2D3D8","#FFEFDE","#81996F"),
name="Outcomes")+
labs(title="Confusion Metrics") +
mapTheme
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Calgary")
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.9, colour=NA) +
geom_sf(data=calg_pred %>%
filter(inund_sum == 0),
fill="#F9E2B2", alpha=0.35,colour=NA) +
mapTheme +
labs(title="Observed and Predicted Flood Inundation Areas",
subtitle="Yellow marks areas with observed 'inundation', \nall other taken as 'not inundated' for the purpose of binary regression modeling")
calg_pred <-
cbind(calg_dat_log,allPredictions)
%>%
calg_pred <-
cbind(calg_dat_log,allPredictions) %>%
mutate(allPredictions = round(allPredictions * 100))
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(knitr)
library(caret)
library(pscl)
library(plotROC)
library(pROC)
library(sf)
library(tidyverse)
library(knitr)
library(kableExtra)
library(tigris)
library(viridis)
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
plot.margin = margin(1, 1, 1, 1, 'cm'),
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",linewidth =.75),
axis.ticks=element_blank())
preserve <- st_read("https://raw.githubusercontent.com/mafichman/CPLN_675/main/Week_7_10/data/pa_conservation/fishnet3k_pa_JoinDEM_Slope_distSlope_distUrban_landCover_distRivers.geojson")
protected <- st_read("https://raw.githubusercontent.com/mafichman/CPLN_675/main/Week_7_10/data/pa_conservation/pa_protected_lands2.geojson")
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 100))
denver_pred <-
cbind(denver_dat_log,allPredictions_denver)
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 100000000))
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
install.packages("metrics")
library(metrics)
install.packages("Metrics")
library(Metrics)
mae(calg_pred$inund_sum, calg_pred$allPredictions)
inundModel3_coefficients %>%
kbl(caption = "Exponentiated Coefficients: Logistic Regression Model 2")
%>%
inundModel3_coefficients %>%
kbl(caption = "Exponentiated Coefficients: Logistic Regression Model 2") %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
corr <- calg_dat %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log) %>%
dplyr::summarise(inund_sum = (inund_sum),
pervious_mean = (pervious_mean),
elevation_median = (elevation_median),
flowac_mean_log = (flowac_mean_log),
streamdist_min_log = (streamdist_min_log))
View(corr)
View(corr)
corr <- calg_dat %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log) %>%
dplyr::select(-uniqueID, -geometry) %>%
dplyr::summarise(inund_sum = (inund_sum),
pervious_mean = (pervious_mean),
elevation_median = (elevation_median),
flowac_mean_log = (flowac_mean_log),
streamdist_min_log = (streamdist_min_log))
corr <- calg_dat %>%
as.data.frame() %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log) %>%
dplyr::summarise(inund_sum = (inund_sum),
pervious_mean = (pervious_mean),
elevation_median = (elevation_median),
flowac_mean_log = (flowac_mean_log),
streamdist_min_log = (streamdist_min_log))
View(corr)
View(corr)
calg_matrix = cor(corr)
ggcorrplot(calg_matrix, method="square", colors = c("gray2", "wheat1", "darkorchid4"),
tl.cex=7)
corr <- calg_dat %>%
as.data.frame() %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log)
calg_matrix = cor(corr)
ggcorrplot(calg_matrix, method="square", colors = c("gray2", "wheat1", "darkorchid4"),
tl.cex=7)
corr <- calg_dat %>%
as.data.frame() %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log) %>%
rename(Distance to Stream (log) = streamdist_min_log)
corr <- calg_dat %>%
as.data.frame() %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log) %>%
rename(Distance to Stream = streamdist_min_log)
corr <- calg_dat %>%
as.data.frame() %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log) %>%
rename("Distance to Stream" = streamdist_min_log)
calg_matrix = cor(corr)
ggcorrplot(calg_matrix, method="square", colors = c("gray2", "wheat1", "darkorchid4"),
tl.cex=7)
corr <- calg_dat %>%
as.data.frame() %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log) %>%
rename("Distance to Stream (log)" = streamdist_min_log,
"Flow Accumulation (log)" = flowac_mean_log,
"Elevation" = elevation_median,
"Land Porosity" = pervious_mean,
"Inundation (observed" = inund_sum)
calg_matrix = cor(corr)
ggcorrplot(calg_matrix, method="square", colors = c("gray2", "wheat1", "darkorchid4"),
tl.cex=7)
ggcorrplot(calg_matrix, method="square", colors = yellows),
glimpse(neutrals)
glimpse(yellows)
ggcorrplot(calg_matrix, method="square", colors = c("#FFEFDE", "#EDC876", "#6E5321"),
tl.cex=7)
ggcorrplot(calg_matrix, method="square", colors = c("#F9E2B2", "#EDB025", "#AC832D"),
tl.cex=7)
#6E5321
#6E5321
ggcorrplot(calg_matrix, method="square", colors = c("#F9E2B2", "#EDB025", "#6E5321"),
tl.cex=7)
ggcorrplot(calg_matrix, method="square", colors = c("#FFEFDE", "#EDB025", "#6E5321"),
tl.cex=7)
glimpse(greens)
glimpse(greys)
ggcorrplot(calg_matrix, method="square", colors = c("#D3D3D9", "#EDB025", "#A9BF99"),
tl.cex=7)
calg_pred %>%
mutate(confResult=case_when(allPredictions < 50 & inund_sum==0 ~ "True Negative",
allPredictions >= 50 & inund_sum==1 ~ "True Positive",
allPredictions < 50 & inund_sum==1 ~ "False Negative",
allPredictions >= 50 & inund_sum==0 ~ "False Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
scale_fill_manual(values = c("#B0B0B3","#A2D3D8","#FFEFDE","#81996F"),
name="Outcomes")+
labs(title="Confusion Metrics") +
mapTheme
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary",
source = "blah blah blah")
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary",
caption = "Source: blah blah blah")
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary\n",
caption = "Source: blah blah blah")
View(denver_dat_log)
View(denver_dat_log)
View(calg_dat_log)
View(calg_dat_log)
calg_dat_log <- calg_dat %>%
dplyr::select(uniqueID, inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry)
denver_dat_log <- denver_dat %>%
dplyr::select(uniqueID, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry) %>%
mutate(inund_sum==0)
denver_dat_log <- denver_dat %>%
dplyr::select(uniqueID, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry) %>%
mutate(inund_sum=0)
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")[,7]
denver_dat_log <- denver_dat %>%
dplyr::select(uniqueID, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry)
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")
str(allPredictions_denver)
View(allPredictions_denver)
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 100000000))
View(denver_pred)
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")
str(allPredictions_denver)
denver_pred <-
cbind(denver_dat_log,allPredictions_denver$1) %>%
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")
str(allPredictions_denver)
allPredictions_denver <- allPredictions_denver %>% dplyr::select(c(2))
denver_pred <-
cbind(denver_dat_log,allPredictions_denver)
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
rename(allPredictions=X1)%>%
mutate(allPredictions = round(allPredictions_denver * 100000000))
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
rename(allPredictions=X1)%>%
mutate(allPredictions = round(allPredictions_denver * 1000000))
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
rename(allPredictions=X1)%>%
mutate(allPredictions = round(allPredictions_denver * 100000000))
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary\n",
caption = "Source: blah blah blah")
denver_dat_log <- denver_dat %>%
dplyr::select(uniqueID, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry)
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")
str(allPredictions_denver)
allPredictions_denver <- allPredictions_denver %>% dplyr::select(c(2))
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
rename(allPredictions=X1)%>%
mutate(allPredictions = round(allPredictions* 100000000))
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary\n",
caption = "Source: blah blah blah")
denver_dat_log <- denver_dat %>%
dplyr::select(uniqueID, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry) %>%
mutate(inund_sum == 0)
denver_dat_log <- denver_dat %>%
dplyr::select(uniqueID, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry) %>%
dplyr::mutate(inund_sum = 0)
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")[,7]
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")[,3]
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")
denver_dat_log <- denver_dat %>%
dplyr::select(uniqueID, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry)
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")
str(allPredictions_denver)
allPredictions_denver <- allPredictions_denver %>% dplyr::select(c(2))
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
rename(allPredictions=X1)%>%
mutate(allPredictions = round(allPredictions* 100000000))
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
rename(allPredictions=X1)%>%
mutate(allPredictions = round(allPredictions* 100000000))
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,4))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary\n",
caption = "Source: blah blah blah")
