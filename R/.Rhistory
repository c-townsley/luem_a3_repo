color = "red", fill = "transparent")
#st_write(calgary_fishnet, "Calgary/Processed/calgary_fishnet/calgary_fishnet.shp", geometry = TRUE)
#load in cleaned fishnet with partial cells removed
calgary_fishnet <-  read_sf("Calgary/Processed/calgary_fishnet_nozeros/calgary_fishnet_nozeros.shp")
#load in engineered features for calgary and process
calg_inund <- read_csv("Calgary/Processed/zonalstats_tables/calg_inundation_sum.csv") %>%
rename(inund_sum = SUM) %>%
dplyr::select(uniqueID, inund_sum) %>%
mutate(inund_sum = ifelse(inund_sum >= 16, 1, 0)) #turn inundation sum values into binary (threshold = 16)
calg_pervious <- read.csv("Calgary/Processed/zonalstats_tables/calg_pervious_mean.csv") %>%
dplyr::select(uniqueID, MEAN) %>%
rename(pervious_mean = MEAN)
calg_elevation <- read.csv("Calgary/Processed/zonalstats_tables/calg_elevation_med.csv") %>%
dplyr::select(uniqueID, MEDIAN) %>%
rename(elevation_median = MEDIAN)
calg_flowac <- read.csv("Calgary/Processed/zonalstats_tables/calg_flowac_mean.csv") %>%
dplyr::select(uniqueID, MEAN) %>%
rename(flowac_mean = MEAN)
calg_streamdist <- read.csv("Calgary/Processed/zonalstats_tables/calg_dist2stream_min.csv") %>%
dplyr::select(uniqueID, MIN) %>%
rename(streamdist_min = MIN)
calg_dat <- calgary_fishnet %>%
mutate(uniqueID = as.integer(uniqueID)) %>%
left_join(calg_inund, by = "uniqueID") %>%
left_join(calg_pervious, by = "uniqueID") %>%
left_join(calg_elevation, by = "uniqueID") %>%
left_join(calg_flowac, by = "uniqueID") %>%
left_join(calg_streamdist, by = "uniqueID") %>%
mutate(flowac_mean_log = log(flowac_mean),
streamdist_min_log = log(streamdist_min)) %>%
na.omit() %>%
dplyr::mutate(streamdist_min_log = if_else(streamdist_min_log <0, 0, streamdist_min_log),
flowac_mean_log = if_else(flowac_mean_log <0, 0, flowac_mean_log))
denv_pervious <- read.csv ("Denver/Processed/zonalstats_tables/denv_pervious_mean.csv") %>%
dplyr::select(uniqueID, MEAN) %>%
rename(pervious_mean = MEAN)
denv_elevation <- read.csv("Denver/Processed/zonalstats_tables/denv_elevation_med.csv") %>%
dplyr::select(uniqueID, MEDIAN) %>%
rename(elevation_median = MEDIAN)
denv_flowac <- read.csv("Denver/Processed/zonalstats_tables/denv_flowac_mean.csv") %>%
dplyr::select(uniqueID, MEAN) %>%
rename(flowac_mean = MEAN)
denv_streamdist <- read.csv("Denver/Processed/zonalstats_tables/denv_dist2stream_min.csv") %>%
dplyr::select(uniqueID, MIN) %>%
rename(streamdist_min = MIN)
denver_dat <- denver_fishnet %>%
mutate(uniqueID = as.integer(uniqueID)) %>%
left_join(denv_pervious, by = 'uniqueID') %>%
left_join(denv_elevation, by = 'uniqueID') %>%
left_join(denv_flowac, by = 'uniqueID') %>%
left_join(denv_streamdist, by = 'uniqueID') %>%
mutate(flowac_mean_log = log(flowac_mean),
streamdist_min_log = log(streamdist_min)) %>%
na.omit() %>%
dplyr::mutate(streamdist_min_log = if_else(streamdist_min_log <0, 0, streamdist_min_log),
flowac_mean_log = if_else(flowac_mean_log <0, 0, flowac_mean_log))
calg_dat <- calg_dat %>%
st_transform(crs = 3776)
denver_dat <- denver_dat %>%
st_transform(crs = 2232)
calg_PlotVariables <- calg_dat %>%
as.data.frame() %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log) %>%
pivot_longer(cols = -inund_sum)
#violin plots
#change code for for calgary_dat
##use boxplots with scatter points to visualize the spread of data?
ggplot(calg_PlotVariables) +
geom_violin(aes(x = as.factor(inund_sum),
y = value, fill = as.factor(inund_sum))) +
facet_wrap(~name, scales = "free_y") +
labs(x="Inundated", y="Value") +
scale_fill_manual(values = c("#CEEBF0", "#51A6AE"),
labels = c("Not Inundated","Inundated"), name = "") +
labs(x="Inundated", y="Value") +
plotTheme
##facet_wrap - one ggplot recipe for each variable
###use scales = free or free_y to plot values that are comparatively lower or higher
corr <- calg_dat %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log) %>%
dplyr::summarise(inund_sum = (inund_sum),
pervious_mean = (pervious_mean),
elevation_median = (elevation_median),
flowac_mean_log = (flowac_mean_log),
streamdist_min_log = (streamdist_min_log))
calg_matrix = cor(corr)
#calculate on calgary_dat
calg_inund_fishnet <- calg_dat %>%
filter(inund_sum == 1)
no_fishnets <-(509/5373)*100
#About 509 of 5373, or 9.5% of fishnet cells in Calgary are inundated
#change code for calgary_dat
set.seed(3456)
trainIndex <- createDataPartition(calg_dat$elevation_median, p = .70,
list = FALSE,
times = 1)
inundTrain <- calg_dat[ trainIndex,] %>%
dplyr::select(-flowac_mean, -streamdist_min)
inundTest  <- calg_dat[-trainIndex,]%>%
dplyr::select(-flowac_mean, -streamdist_min)
##the sets are randomly generated
##p=0.70 indicates the 70/30 partition
inundModel <- glm(inund_sum ~ .,
family="binomial"(link="logit"), data = inundTrain %>%
as.data.frame() %>%
dplyr::select(-geometry, -uniqueID))
summary(inundModel)
classProbs <- predict(inundModel, inundTest, type="response")
hist(classProbs)
##histogram is for the whole dataset
##represents the probability that a cell will be inundated (x-axis), vs number of cells with that probability (y-axis)
testProbs <- data.frame(obs = as.numeric(inundTest$inund_sum),
pred = classProbs)
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) +
geom_density() +
facet_grid(obs ~ .) +
xlab("Probability") +
ylab("Frequency") +
geom_vline(xintercept = .5) +
scale_fill_manual(values = c("#CEEBF0", "#51A6AE"),
labels = c("Not Inundated","Inundated"),
name = "")+
plotTheme
testProbs$predClass  = ifelse(testProbs$pred > .5 ,1,0)
caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
testProbs$predClass75  = ifelse(testProbs$pred > .75 ,1,0)
caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass75),
positive = "1")
testProbs$predClass25  = ifelse(testProbs$pred > .25 ,1,0)
caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass25),
positive = "1")
ggplot(testProbs, aes(d = obs, m = pred)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey')
auc(testProbs$obs, testProbs$pred)
ctrl <- trainControl(method = "cv",
number = 100,
savePredictions = TRUE)
cvFit <- train(as.factor(inund_sum) ~ .,
data = calg_dat %>%
as.data.frame() %>%
dplyr::select(inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log),
method="glm", family="binomial",
trControl = ctrl)
cvFit
ggplot(as.data.frame(cvFit$resample), aes(Accuracy)) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1)) +
labs(x="Accuracy",
y="Count")+
plotTheme
calg_dat_log <- calg_dat %>%
dplyr::select(uniqueID, inund_sum, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry)
allPredictions <-
predict(cvFit, calg_dat_log, type="prob")[,2]
calg_pred <-
cbind(calg_dat_log,allPredictions) %>%
mutate(allPredictions = round(allPredictions * 100))
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Calgary")
View(calg_pred)
View(calg_pred)
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(preserve$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.5, colour=NA) +
geom_sf(data=calg_pred %>%
filter(inund_sum == 0),
fill="#F9E2B2", alpha=0.5,colour=NA) +
mapTheme +
labs(title="Observed and Predicted Conservation Areas",
subtitle="Pennsylvania; Existing conserved land in green; Existing development in red ")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.5, colour=NA) +
geom_sf(data=calg_pred %>%
filter(inund_sum == 0),
fill="#F9E2B2", alpha=0.5,colour=NA) +
mapTheme +
labs(title="Observed and Predicted Conservation Areas",
subtitle="Pennsylvania; Existing conserved land in green; Existing development in red ")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.2, colour=NA) +
geom_sf(data=calg_pred %>%
filter(inund_sum == 0),
fill="#F9E2B2", alpha=0.2,colour=NA) +
mapTheme +
labs(title="Observed and Predicted Conservation Areas",
subtitle="Pennsylvania; Existing conserved land in green; Existing development in red ")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.7, colour=NA) +
geom_sf(data=calg_pred %>%
filter(inund_sum == 0),
fill="#F9E2B2", alpha=0.7,colour=NA) +
mapTheme +
labs(title="Observed and Predicted Conservation Areas",
subtitle="Pennsylvania; Existing conserved land in green; Existing development in red ")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", colour=NA) +
geom_sf(data=calg_pred %>%
filter(inund_sum == 0),
fill="#F9E2B2",colour=NA) +
mapTheme +
labs(title="Observed and Predicted Inundation Areas",
subtitle="Existing conserved land in green; Existing development in red ")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.8, colour=NA) +
geom_sf(data=calg_pred %>%
filter(inund_sum == 0),
fill="#F9E2B2", alpha=0.6,colour=NA) +
mapTheme +
labs(title="Observed and Predicted Inundation Areas",
subtitle="Existing conserved land in green; Existing development in red ")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.8, colour=NA) +
geom_sf(data=calg_pred %>%
filter(inund_sum == 0),
fill="#F9E2B2", alpha=0.7,colour=NA) +
mapTheme +
labs(title="Observed and Predicted Flood Inundation Areas",
subtitle="Existing conserved land in green; Existing development in red ")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.8, colour=NA) +
mapTheme +
labs(title="Observed and Predicted Flood Inundation Areas",
subtitle="Existing inundation areas in dark yellow; Existing development in red ")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.9, colour=NA) +
mapTheme +
labs(title="Observed and Predicted Flood Inundation Areas",
subtitle="Existing inundation areas in dark yellow; Existing development in red ")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.9, colour=NA) +
mapTheme +
labs(title="Observed and Predicted Flood Inundation Areas",
subtitle="Existing inundation areas in yellow, all other taken as not inundated for the purpose of binary regression modeling")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.9, colour=NA) +
geom_sf(data=calg_pred %>%
filter(inund_sum == 0),
fill="#F9E2B2", alpha=0.3,colour=NA) +
mapTheme +
labs(title="Observed and Predicted Flood Inundation Areas",
subtitle="Existing inundation areas in yellow, all other taken as 'not inundated' for the purpose of binary regression modeling")
ggplot() +
geom_sf(data=calg_pred, aes(fill=factor(ntile(allPredictions,5))), colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
geom_sf(data=calg_pred  %>%
filter(inund_sum == 1),
fill="#EDBA46", alpha=0.9, colour=NA) +
geom_sf(data=calg_pred %>%
filter(inund_sum == 0),
fill="#F9E2B2", alpha=0.35,colour=NA) +
mapTheme +
labs(title="Observed and Predicted Flood Inundation Areas",
subtitle="Existing inundation areas in yellow, all other taken as 'not inundated' for the purpose of binary regression modeling")
preserve %>%
mutate(confResult=case_when(allPredictions < 50 & inund_sum==0 ~ "True_Negative",
allPredictions >= 50 & inund_sum==1 ~ "True_Positive",
allPredictions < 50 & inund_sum==1 ~ "False_Negative",
allPredictions >= 50 & inund_sum==0 ~ "False_Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
scale_fill_manual(values = c("Red","Orange","Light Blue","Light Green"),
name="Outcomes")+
labs(title="Confusion Metrics") +
mapTheme
calg_dat_log %>%
mutate(confResult=case_when(allPredictions < 50 & inund_sum==0 ~ "True_Negative",
allPredictions >= 50 & inund_sum==1 ~ "True_Positive",
allPredictions < 50 & inund_sum==1 ~ "False_Negative",
allPredictions >= 50 & inund_sum==0 ~ "False_Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
scale_fill_manual(values = c("Red","Orange","Light Blue","Light Green"),
name="Outcomes")+
labs(title="Confusion Metrics") +
mapTheme
calg_dat_log %>%
mutate(confResult=case_when(allPredictions < 50 & inund_sum==0 ~ "True_Negative",
allPredictions >= 50 & inund_sum==1 ~ "True_Positive",
allPredictions < 50 & inund_sum==1 ~ "False_Negative",
allPredictions >= 50 & inund_sum==0 ~ "False_Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
scale_fill_manual(values = yellows,
name="Outcomes")+
labs(title="Confusion Metrics") +
mapTheme
calg_dat_log %>%
mutate(confResult=case_when(allPredictions < 50 & inund_sum==0 ~ "True_Negative",
allPredictions >= 50 & inund_sum==1 ~ "True_Positive",
allPredictions < 50 & inund_sum==1 ~ "False_Negative",
allPredictions >= 50 & inund_sum==0 ~ "False_Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
scale_fill_manual(values = c("Red","Orange","Light Blue","Light Green"),
name="Outcomes")+
labs(title="Confusion Metrics") +
mapTheme
calg_pred %>%
mutate(confResult=case_when(allPredictions < 50 & inund_sum==0 ~ "True_Negative",
allPredictions >= 50 & inund_sum==1 ~ "True_Positive",
allPredictions < 50 & inund_sum==1 ~ "False_Negative",
allPredictions >= 50 & inund_sum==0 ~ "False_Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
scale_fill_manual(values = c("Red","Orange","Light Blue","Light Green"),
name="Outcomes")+
labs(title="Confusion Metrics") +
mapTheme
calg_pred %>%
mutate(confResult=case_when(allPredictions < 50 & inund_sum==0 ~ "True Negative",
allPredictions >= 50 & inund_sum==1 ~ "True Positive",
allPredictions < 50 & inund_sum==1 ~ "False Negative",
allPredictions >= 50 & inund_sum==0 ~ "False Positive")) %>%
ggplot()+
geom_sf(aes(fill = confResult), color = "transparent")+
scale_fill_manual(values = c("Red","Orange","Light Blue","Light Green"),
name="Outcomes")+
labs(title="Confusion Metrics") +
mapTheme
View(denver_dat)
View(denver_dat)
denver_dat_log <- denver_dat %>%
dplyr::select(uniqueID, pervious_mean, elevation_median, flowac_mean_log, streamdist_min_log, geometry)
allPredictions <-
predict(cvFit, denver_dat_log, type="prob")[,2]
allPredictions <-
predict(cvFit, calg_dat_log, type="prob")[,2]
allPredictions_denver <-
predict(cvFit, denver_dat_log, type="prob")[,2]
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 100))
View(denver_pred)
View(denver_pred)
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 10000))
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 100000000))
View(denver_pred)
View(denver_pred)
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 10000000))
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 100))
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
denver_pred <-
cbind(denver_dat_log,allPredictions_denver) %>%
mutate(allPredictions = round(allPredictions_denver * 10000000))
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(calg_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(denver_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
plot(denver_pred$allPredictions)
ggplot() +
geom_sf(data=denver_pred, aes(fill=factor(ntile(allPredictions,5))),
colour=NA) +
scale_fill_manual(values = blues,
labels=as.character(quantile(denver_pred$allPredictions,
c(0.1,.2,.4,.6,.8),
na.rm=T)),
name="Predicted\nProbabilities(%)\n(Quintile\nBreaks)") +
mapTheme +
labs(title="Predicted Probability of Flood Inundation in Denver",
subtitle="Based on a Logistic Regression Model trained on data from Calgary")
